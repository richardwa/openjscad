"use strict";
/// corners indexes
/// 2    3
/// ○ -- ○
/// |    |
/// ○ -- ○
/// 0    1
exports.__esModule = true;
exports.edgeTable = void 0;
/// edge indexes
///    2
///  ○ -- ○
/// 3|    | 1
///  ○ -- ○
///    0    
var edges = [
    [0, 1], [1, 3], [3, 2], [2, 0]
];
var cases = [
    /// ○ -- ○
    /// |    |
    /// ○ -- ○  0
    [],
    /// ○ -- ○
    /// |    |
    /// ● -- ○  1
    [3, 0],
    /// ○ -- ○
    /// |    |
    /// ○ -- ●  2
    [0, 1],
    /// ○ -- ○
    /// |    |
    /// ● -- ●  3
    [3, 1],
    /// ● -- ○
    /// |    |
    /// ○ -- ○  4
    [2, 3],
    /// ● -- ○
    /// |    |
    /// ● -- ○  5
    [2, 0],
    /// ● -- ○
    /// |    |
    /// ○ -- ●  6
    [0, 1, 3, 2],
    /// ● -- ○
    /// |    |
    /// ● -- ● 7
    [2, 1],
    /// ○ -- ●
    /// |    |
    /// ○ -- ○ 8
    [1, 2],
    /// ○ -- ●
    /// |    |
    /// ● -- ○ 9
    [2, 3, 1, 0],
    /// ○ -- ●
    /// |    |
    /// ○ -- ● 10
    [0, 2],
    /// ○ -- ●
    /// |    |
    /// ● -- ● 11
    [3, 2],
    /// ● -- ●
    /// |    |
    /// ○ -- ○ 12
    [1, 3],
    /// ● -- ●
    /// |    |
    /// ● -- ○ 13
    [1, 0],
    /// ● -- ●
    /// |    |
    /// ○ -- ● 14
    [0, 3],
    /// ● -- ●
    /// |    |
    /// ● -- ● 15
    [],
];
exports.edgeTable = cases.map(function (pairs) {
    if (pairs) {
        return pairs.map(function (p) { return edges[p]; });
    }
});
//# sourceMappingURL=marching-squares-tables.js.map